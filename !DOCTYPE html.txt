<!DOCTYPE html>
<html lang="de">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>LifeMap – Dein Entscheidungs‑Navigator</title>
  <meta name="description" content="LifeMap hilft dir, im Alltag und bei großen Lebensfragen die nächste beste Entscheidung zu treffen – individuell, datensparsam und kostenlos.">
  <meta name="author" content="Raphael Schacht">
  <link rel="icon" href="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 128 128'%3E%3Cdefs%3E%3ClinearGradient id='g' x1='0' y1='0' x2='1' y2='1'%3E%3Cstop stop-color='%230ea5e9'/%3E%3Cstop offset='1' stop-color='%238b5cf6'/%3E%3C/linearGradient%3E%3C/defs%3E%3Ccircle cx='64' cy='64' r='60' fill='url(%23g)'/%3E%3Cpath d='M36 68l14 14 34-40' stroke='%23fff' stroke-width='10' fill='none' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/svg%3E">
  <!-- Tailwind CSS über CDN (kostenlos) -->
  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    tailwind.config = { theme: { extend: { colors: { brand: { 500: '#6366f1', 600: '#4f46e5' }, accent: { 500:'#0ea5e9', 600:'#0284c7' } } } } }
  </script>
  <style>
    html{ scroll-behavior:smooth }
    .glass{ backdrop-filter:saturate(180%) blur(8px); background:rgba(255,255,255,.7) }
    .container{ max-width:110rem }
    *{ scrollbar-width: thin }
  </style>
</head>
<body class="bg-gradient-to-br from-slate-50 to-slate-100 text-slate-900">
  <!-- Sticky Nav -->
  <header class="sticky top-0 z-40 glass border-b">
    <div class="container mx-auto px-4 py-3 flex items-center gap-4">
      <a href="#home" class="flex items-center gap-2 font-bold"><span class="inline-block w-7 h-7 rounded-full bg-gradient-to-br from-accent-500 to-brand-500"></span> LifeMap</a>
      <nav class="ml-auto hidden md:flex items-center gap-2">
        <a class="px-3 py-1.5 rounded-xl hover:bg-slate-200" href="#features">Funktionen</a>
        <a class="px-3 py-1.5 rounded-xl hover:bg-slate-200" href="#how">So funktioniert's</a>
        <a class="px-3 py-1.5 rounded-xl hover:bg-slate-200" href="#app">App</a>
        <a class="px-3 py-1.5 rounded-xl hover:bg-slate-200" href="#privacy">Datenschutz</a>
        <a class="px-3 py-1.5 rounded-xl hover:bg-slate-200" href="#faq">FAQ</a>
        <a class="px-3 py-1.5 rounded-xl hover:bg-slate-200" href="#contact">Kontakt</a>
      </nav>
      <button id="openMenu" class="md:hidden ml-auto p-2 rounded-lg hover:bg-slate-200" aria-label="Menü">☰</button>
    </div>
    <div id="mobileMenu" class="md:hidden hidden border-t">
      <nav class="px-4 py-2 grid">
        <a class="px-3 py-2 rounded-lg hover:bg-slate-200" href="#features">Funktionen</a>
        <a class="px-3 py-2 rounded-lg hover:bg-slate-200" href="#how">So funktioniert's</a>
        <a class="px-3 py-2 rounded-lg hover:bg-slate-200" href="#app">App</a>
        <a class="px-3 py-2 rounded-lg hover:bg-slate-200" href="#privacy">Datenschutz</a>
        <a class="px-3 py-2 rounded-lg hover:bg-slate-200" href="#faq">FAQ</a>
        <a class="px-3 py-2 rounded-lg hover:bg-slate-200" href="#contact">Kontakt</a>
      </nav>
    </div>
  </header>

  <!-- Hero -->
  <section id="home" class="container mx-auto px-4 py-16 md:py-24">
    <div class="grid lg:grid-cols-2 gap-10 items-center">
      <div>
        <h1 class="text-4xl md:text-6xl font-extrabold leading-tight">Der <span class="bg-gradient-to-r from-accent-500 to-brand-500 bg-clip-text text-transparent">Navigator</span> für deine nächsten Entscheidungen</h1>
        <p class="mt-4 text-lg text-slate-700 max-w-2xl">LifeMap zeigt dir in Sekunden die <strong>nächste beste Aktion</strong> – auf Basis deiner Ziele, Werte und Tagesform. Datenschutzfreundlich, kostenlos, auf allen Geräten.</p>
        <div class="mt-6 flex gap-3">
          <a href="#app" class="px-5 py-3 rounded-2xl text-white bg-gradient-to-r from-accent-500 to-brand-500 hover:opacity-90">Jetzt starten</a>
          <a href="#how" class="px-5 py-3 rounded-2xl border hover:bg-white">Wie es funktioniert</a>
        </div>
        <p class="mt-3 text-sm text-slate-500">Inhaber & Entwickler: <strong>Raphael Schacht</strong> · Support: <a class="underline" href="mailto:rschacht310811@gmail.com">rschacht310811@gmail.com</a></p>
      </div>
      <div class="relative">
        <div class="absolute -inset-4 rounded-3xl blur-2xl opacity-40 bg-gradient-to-br from-accent-500 to-brand-500"></div>
        <div class="relative rounded-3xl border bg-white p-6 shadow-xl">
          <div class="flex items-center justify-between">
            <div class="font-semibold">Live‑Vorschlag</div>
            <span id="liveScore" class="text-xs px-2 py-1 rounded-full bg-slate-100 border">Score: –</span>
          </div>
          <p id="liveSuggestion" class="mt-3 text-lg">Fülle unten dein Profil aus, dann erscheinen hier Vorschläge ✨</p>
          <div class="mt-4 flex gap-2 text-sm">
            <button id="btnQuickGood" class="px-3 py-2 rounded-xl border">👍 Passt</button>
            <button id="btnQuickBad" class="px-3 py-2 rounded-xl border">👎 Unpassend</button>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Features -->
  <section id="features" class="container mx-auto px-4 pb-14">
    <h2 class="text-3xl font-bold mb-6">Warum LifeMap?</h2>
    <div class="grid md:grid-cols-3 gap-6">
      <article class="rounded-2xl border bg-white p-6">
        <h3 class="font-semibold text-lg">Personalisierte Entscheidungen</h3>
        <p class="mt-2 text-slate-700">Dein Werteprofil (Gesundheit, Karriere, Finanzen, Beziehungen, Lernen, Erholung) steuert die Empfehlungen.</p>
      </article>
      <article class="rounded-2xl border bg-white p-6">
        <h3 class="font-semibold text-lg">Datenschutz an erster Stelle</h3>
        <p class="mt-2 text-slate-700">Alle Daten bleiben <strong>lokal</strong> in deinem Browser (LocalStorage). Export/Import optional.</p>
      </article>
      <article class="rounded-2xl border bg-white p-6">
        <h3 class="font-semibold text-lg">Sofort nutzbar</h3>
        <p class="mt-2 text-slate-700">Keine Registrierung, keine Kosten. Läuft auf Windows, iPhone und iPad direkt im Browser.</p>
      </article>
    </div>
  </section>

  <!-- How it works -->
  <section id="how" class="container mx-auto px-4 pb-14">
    <h2 class="text-3xl font-bold mb-6">So funktioniert's</h2>
    <ol class="grid md:grid-cols-3 gap-6 list-none">
      <li class="rounded-2xl border bg-white p-6">
        <span class="text-sm uppercase tracking-wider text-slate-500">Schritt 1</span>
        <h3 class="font-semibold text-lg mt-1">Profil anlegen</h3>
        <p class="mt-2 text-slate-700">Ziele, Werte & Rahmenbedingungen eintragen (Zeit, Energie, Budget, Fokus).</p>
      </li>
      <li class="rounded-2xl border bg-white p-6">
        <span class="text-sm uppercase tracking-wider text-slate-500">Schritt 2</span>
        <h3 class="font-semibold text-lg mt-1">Check‑in</h3>
        <p class="mt-2 text-slate-700">Kurz angeben, wie viel Zeit du jetzt hast und wie du dich fühlst.</p>
      </li>
      <li class="rounded-2xl border bg-white p-6">
        <span class="text-sm uppercase tracking-wider text-slate-500">Schritt 3</span>
        <h3 class="font-semibold text-lg mt-1">Vorschlag erhalten</h3>
        <p class="mt-2 text-slate-700">LifeMap berechnet den <em>Nächste‑beste‑Aktion</em>‑Score und schlägt dir 1–4 Optionen vor.</p>
      </li>
    </ol>
  </section>

  <!-- App Section -->
  <section id="app" class="container mx-auto px-4 pb-16">
    <div class="grid lg:grid-cols-3 gap-6">
      <!-- Profil -->
      <div class="lg:col-span-1 rounded-2xl border bg-white p-5">
        <h3 class="text-xl font-bold">Profil</h3>
        <p class="text-sm text-slate-600 mb-2">Gewichte, was dir wichtig ist (0–10). Summe darf > 10 sein, wir normalisieren das.</p>
        <div class="grid grid-cols-2 gap-3 text-sm">
          <label>Gesundheit <input id="wHealth" type="number" min="0" max="10" step="1" class="mt-1 w-full border rounded-lg p-2" value="7"></label>
          <label>Karriere <input id="wCareer" type="number" min="0" max="10" step="1" class="mt-1 w-full border rounded-lg p-2" value="6"></label>
          <label>Finanzen <input id="wMoney" type="number" min="0" max="10" step="1" class="mt-1 w-full border rounded-lg p-2" value="6"></label>
          <label>Beziehungen <input id="wSocial" type="number" min="0" max="10" step="1" class="mt-1 w-full border rounded-lg p-2" value="5"></label>
          <label>Lernen <input id="wLearn" type="number" min="0" max="10" step="1" class="mt-1 w-full border rounded-lg p-2" value="5"></label>
          <label>Erholung <input id="wRest" type="number" min="0" max="10" step="1" class="mt-1 w-full border rounded-lg p-2" value="4"></label>
        </div>
        <div class="grid grid-cols-2 gap-3 text-sm mt-3">
          <label>Zeit heute (min) <input id="budgetTime" type="number" min="5" step="5" class="mt-1 w-full border rounded-lg p-2" value="60"></label>
          <label>Energie 1–10 <input id="energy" type="number" min="1" max="10" step="1" class="mt-1 w-full border rounded-lg p-2" value="6"></label>
          <label>Budget € <input id="budgetMoney" type="number" min="0" step="1" class="mt-1 w-full border rounded-lg p-2" value="0"></label>
          <label>Fokus (0–10) <input id="focus" type="number" min="0" max="10" step="1" class="mt-1 w-full border rounded-lg p-2" value="6"></label>
        </div>
        <div class="flex gap-2 mt-3">
          <button id="btnSaveProfile" class="px-3 py-2 rounded-xl bg-slate-900 text-white">Profil speichern</button>
          <button id="btnResetProfile" class="px-3 py-2 rounded-xl border">Zurücksetzen</button>
        </div>
        <div class="flex gap-2 mt-3 text-sm">
          <button id="btnExportData" class="px-3 py-2 rounded-xl border">Export (JSON)</button>
          <label class="px-3 py-2 rounded-xl border cursor-pointer">Import
            <input id="fileImport" type="file" accept="application/json" class="hidden">
          </label>
        </div>
      </div>

      <!-- Optionen / Aufgabenpool -->
      <div class="lg:col-span-2 rounded-2xl border bg-white p-5">
        <div class="flex items-center justify-between">
          <h3 class="text-xl font-bold">Aufgaben & Optionen</h3>
          <button id="btnAddTask" class="px-3 py-2 rounded-xl bg-gradient-to-r from-accent-500 to-brand-500 text-white">+ Neu</button>
        </div>
        <p class="text-sm text-slate-600 mb-2">Lege Optionen an (z. B. 30 Min. Laufen, 45 Min. Bewerbung, 20 Min. Lesen). LifeMap bewertet sie für <em>jetzt</em>.</p>
        <ul id="taskList" class="space-y-3"></ul>
        <template id="tplTask">
          <li class="p-3 border rounded-xl grid md:grid-cols-12 gap-2 items-start">
            <div class="md:col-span-3">
              <label class="text-xs text-slate-500">Titel
                <input data-k="title" class="mt-1 w-full border rounded-lg p-2" placeholder="z. B. 30 Min. Laufen">
              </label>
            </div>
            <div class="md:col-span-3">
              <label class="text-xs text-slate-500">Kategorie
                <select data-k="cat" class="mt-1 w-full border rounded-lg p-2">
                  <option>Gesundheit</option>
                  <option>Karriere</option>
                  <option>Finanzen</option>
                  <option>Beziehungen</option>
                  <option>Lernen</option>
                  <option>Erholung</option>
                </select>
              </label>
            </div>
            <div class="md:col-span-2">
              <label class="text-xs text-slate-500">Zeit (min)
                <input data-k="time" type="number" min="5" step="5" class="mt-1 w-full border rounded-lg p-2" value="30">
              </label>
            </div>
            <div class="md:col-span-2">
              <label class="text-xs text-slate-500">Kosten (€)
                <input data-k="cost" type="number" min="0" step="1" class="mt-1 w-full border rounded-lg p-2" value="0">
              </label>
            </div>
            <div class="md:col-span-2">
              <label class="text-xs text-slate-500">Energiebedarf (1–10)
                <input data-k="energyNeed" type="number" min="1" max="10" step="1" class="mt-1 w-full border rounded-lg p-2" value="5">
              </label>
            </div>
            <div class="md:col-span-12">
              <label class="text-xs text-slate-500">Beschreibung
                <textarea data-k="desc" rows="2" class="mt-1 w-full border rounded-lg p-2" placeholder="Worum geht's?"></textarea>
              </label>
            </div>
            <div class="md:col-span-12 flex gap-2">
              <button data-act="score" class="px-3 py-2 rounded-xl border">Score berechnen</button>
              <button data-act="rm" class="px-3 py-2 rounded-xl border text-red-600">Entfernen</button>
            </div>
          </li>
        </template>

        <div class="mt-6">
          <button id="btnScoreAll" class="px-4 py-2 rounded-2xl bg-slate-900 text-white">Beste Option jetzt berechnen</button>
        </div>

        <div id="results" class="mt-6 grid lg:grid-cols-2 gap-4"></div>
      </div>
    </div>
  </section>

  <!-- Privacy -->
  <section id="privacy" class="container mx-auto px-4 pb-14">
    <h2 class="text-3xl font-bold mb-4">Datenschutz & offene Architektur</h2>
    <div class="rounded-2xl border bg-white p-6 space-y-3 text-slate-700">
      <p>LifeMap speichert deine Daten ausschließlich lokal in deinem Browser (LocalStorage). Es gibt kein Tracking, keine Cookies von Drittanbietern und keine Server‑Datenbank. Du kannst deine Daten jederzeit als JSON exportieren oder importieren.</p>
      <p>Der Algorithmus ist transparent (siehe Code unten) und lässt sich von dir anpassen. Für Feedback oder Sicherheitsfunde: <a class="underline" href="mailto:rschacht310811@gmail.com">rschacht310811@gmail.com</a></p>
    </div>
  </section>

  <!-- FAQ -->
  <section id="faq" class="container mx-auto px-4 pb-14">
    <h2 class="text-3xl font-bold mb-4">Häufige Fragen</h2>
    <div class="grid md:grid-cols-2 gap-6">
      <details class="rounded-2xl border bg-white p-5">
        <summary class="font-semibold cursor-pointer">Kostet LifeMap etwas?</summary>
        <p class="mt-2 text-slate-700">Die Basisversion ist kostenlos. Später könnte es eine optionale Plus‑Version geben (z. B. Kalender‑Sync, tiefergehende Auswertungen). Die kostenlose Version bleibt erhalten.</p>
      </details>
      <details class="rounded-2xl border bg-white p-5">
        <summary class="font-semibold cursor-pointer">Wer steckt dahinter?</summary>
        <p class="mt-2 text-slate-700">Inhaber & Entwickler: <strong>Raphael Schacht</strong>. Kontakt: <a class="underline" href="mailto:rschacht310811@gmail.com">rschacht310811@gmail.com</a></p>
      </details>
      <details class="rounded-2xl border bg-white p-5">
        <summary class="font-semibold cursor-pointer">Welche Daten werden gespeichert?</summary>
        <p class="mt-2 text-slate-700">Deine Profilgewichte, Ressourcen (Zeit, Budget, Energie), Aufgabenpool, Feedback auf Vorschläge. Alles lokal, bis du es löscht.</p>
      </details>
      <details class="rounded-2xl border bg-white p-5">
        <summary class="font-semibold cursor-pointer">Wie kann ich beitragen?</summary>
        <p class="mt-2 text-slate-700">Schreib uns Ideen/Fehler per Mail. Der Code ist so gebaut, dass du ihn einfach anpassen kannst.</p>
      </details>
    </div>
  </section>

  <!-- Kontakt / Impressum minimal -->
  <section id="contact" class="container mx-auto px-4 pb-24">
    <div class="rounded-2xl border bg-white p-6">
      <h2 class="text-2xl font-bold">Kontakt</h2>
      <p class="mt-2 text-slate-700">E‑Mail: <a class="underline" href="mailto:rschacht310811@gmail.com">rschacht310811@gmail.com</a></p>
      <p class="text-sm text-slate-500 mt-2">Hinweis: Dies ist eine prototypische Web‑App ohne Server. Für ein vollständiges Impressum je nach Rechtsraum bitte ergänzen.</p>
    </div>
    <footer class="mt-6 text-center text-sm text-slate-500">© <span id="year"></span> Raphael Schacht · LifeMap</footer>
  </section>

  <!-- App Logic -->
  <script>
    // ---------- Utility ----------
    const $ = (s, r=document) => r.querySelector(s);
    const $$ = (s, r=document) => Array.from(r.querySelectorAll(s));
    const clamp = (n,min,max)=>Math.min(max,Math.max(min,n));

    // ---------- State ----------
    const defaultState = {
      profile: { wHealth:7,wCareer:6,wMoney:6,wSocial:5,wLearn:5,wRest:4, budgetTime:60, energy:6, budgetMoney:0, focus:6 },
      tasks: [
        {title:'30 Min. Laufen', cat:'Gesundheit', time:30, cost:0, energyNeed:5, desc:'Leichtes Joggen in deiner Nähe'},
        {title:'45 Min. Bewerbung', cat:'Karriere', time:45, cost:0, energyNeed:6, desc:'CV aktualisieren & 1 Bewerbung absenden'},
        {title:'20 Min. Lesen', cat:'Lernen', time:20, cost:0, energyNeed:3, desc:'Sachbuch/Artikel zu deinem Thema'},
        {title:'30 Min. Budget-Check', cat:'Finanzen', time:30, cost:0, energyNeed:4, desc:'Fixkosten prüfen, 1 Mini-Sparmaßnahme'},
        {title:'Freund anrufen', cat:'Beziehungen', time:15, cost:0, energyNeed:2, desc:'Kurzer Check-in & Termin ausmachen'},
        {title:'Power Nap', cat:'Erholung', time:20, cost:0, energyNeed:1, desc:'Kurz schlafen, Timer stellen'}
      ],
      feedback: [] // {title, score, good:boolean, ts}
    };

    let state = load() || defaultState;

    function save(){ localStorage.setItem('lifemap:data', JSON.stringify(state)); }
    function load(){ try{ return JSON.parse(localStorage.getItem('lifemap:data')); }catch(e){ return null } }

    // ---------- UI: Mobile Menu ----------
    $('#openMenu').onclick = ()=> $('#mobileMenu').classList.toggle('hidden');

    // ---------- Profile Bindings ----------
    const fields = ['wHealth','wCareer','wMoney','wSocial','wLearn','wRest','budgetTime','energy','budgetMoney','focus'];
    const ids = Object.fromEntries(fields.map(k=>[k,$('#'+k)]));
    function syncProfileToInputs(){ fields.forEach(k=> ids[k].value = state.profile[k]); }
    function readProfileFromInputs(){ fields.forEach(k=> state.profile[k] = Number(ids[k].value)||0); }

    $('#btnSaveProfile').onclick = ()=>{ readProfileFromInputs(); save(); computeLive(); toast('Profil gespeichert'); };
    $('#btnResetProfile').onclick = ()=>{ state.profile = {...defaultState.profile}; save(); syncProfileToInputs(); toast('Profil zurückgesetzt'); computeLive(); };

    $('#btnExportData').onclick = ()=>{
      const blob = new Blob([JSON.stringify(state,null,2)], {type:'application/json'});
      const url = URL.createObjectURL(blob); const a = document.createElement('a'); a.href=url; a.download='lifemap-data.json'; a.click(); setTimeout(()=>URL.revokeObjectURL(url),500);
    };
    $('#fileImport').onchange = async (e)=>{
      const f = e.target.files[0]; if(!f) return; const t = await f.text();
      try{ state = JSON.parse(t); save(); syncProfileToInputs(); renderTasks(); computeLive(); toast('Import erfolgreich'); }
      catch{ toast('Import fehlgeschlagen'); }
      e.target.value='';
    };

    // ---------- Tasks CRUD ----------
    const taskList = $('#taskList'); const tplTask = $('#tplTask');
    function renderTasks(){
      taskList.innerHTML='';
      state.tasks.forEach((task, idx)=>{
        const li = tplTask.content.firstElementChild.cloneNode(true);
        $$('[data-k]', li).forEach(inp=>{
          const k = inp.getAttribute('data-k');
          inp.value = task[k] ?? '';
          inp.oninput = ()=>{ state.tasks[idx][k] = (k==='time'||k==='cost'||k==='energyNeed')? Number(inp.value): inp.value; save(); };
        });
        li.querySelector('[data-act="score"]').onclick = ()=> scoreOne(task);
        li.querySelector('[data-act="rm"]').onclick = ()=>{ state.tasks.splice(idx,1); save(); renderTasks(); };
        taskList.appendChild(li);
      });
    }
    $('#btnAddTask').onclick = ()=>{ state.tasks.push({title:'',cat:'Gesundheit',time:30,cost:0,energyNeed:5,desc:''}); save(); renderTasks(); };

    // ---------- Scoring Engine ----------
    const CAT_WEIGHT_KEY = { 'Gesundheit':'wHealth','Karriere':'wCareer','Finanzen':'wMoney','Beziehungen':'wSocial','Lernen':'wLearn','Erholung':'wRest' };

    function normalizeWeights(p){
      const arr = Object.values(CAT_WEIGHT_KEY).map(k=> Math.max(0, Number(p[k]||0)) );
      const sum = arr.reduce((a,b)=>a+b,0) || 1; // vermeidet Division durch 0
      const map = {}; Object.entries(CAT_WEIGHT_KEY).forEach(([cat,key])=> map[cat] = (p[key]||0)/sum );
      return map; // Summe ≈ 1.0
    }

    function scoreTask(task, profile){
      const W = normalizeWeights(profile);
      const timeFit = clamp(1 - Math.max(0, (task.time - profile.budgetTime)/120), 0, 1); // passt in verfüg. Zeit; sanfte Abwertung
      const moneyFit = clamp(1 - Math.max(0, (task.cost - profile.budgetMoney)/50), 0, 1); // 0€ ideal, >Budget sinkt
      const energyFit = clamp(1 - Math.abs((task.energyNeed||5) - (profile.energy||5))/10, 0, 1); // passt zur Tagesform
      const focusBoost = clamp((profile.focus||0)/10, 0, 1);
      const catWeight = W[task.cat] ?? 0.1;
      // Endscore: gewichtete Mischung; Skala 0..100
      const base = (0.45*catWeight + 0.2*timeFit + 0.2*energyFit + 0.1*moneyFit + 0.05*focusBoost);
      return Math.round(base*100);
    }

    function computeAll(){ readProfileFromInputs(); const out = state.tasks.map(t=> ({...t, score: scoreTask(t, state.profile)}) ).sort((a,b)=> b.score - a.score); return out; }

    function scoreOne(task){ readProfileFromInputs(); const s = scoreTask(task, state.profile); showResults([{...task, score:s}], true); updateLive({title:task.title, score:s}); }

    function showResults(list, single=false){
      const res = $('#results');
      res.innerHTML = list.map(t=> `
        <article class="border rounded-2xl p-4 bg-white">
          <div class="flex items-center justify-between">
            <h4 class="font-semibold">${escapeHtml(t.title||'Ohne Titel')}</h4>
            <span class="text-xs px-2 py-1 rounded-full border">Score: ${t.score}</span>
          </div>
          <p class="text-sm text-slate-700 mt-1">${escapeHtml(t.desc||'')}</p>
          <div class="text-xs text-slate-500 mt-2">Kategorie: ${t.cat} · Zeit: ${t.time}min · Kosten: ${t.cost}€ · Energiebedarf: ${t.energyNeed}/10</div>
          <div class="mt-3 flex gap-2 text-sm">
            <button class="px-3 py-2 rounded-xl border" onclick="window._fb('${encodeURIComponent(t.title)}', ${t.score}, true)">👍 Passt</button>
            <button class="px-3 py-2 rounded-xl border" onclick="window._fb('${encodeURIComponent(t.title)}', ${t.score}, false)">👎 Unpassend</button>
          </div>
        </article>
      `).join('');
      if (!single && list.length) updateLive({title:list[0].title, score:list[0].score});
    }

    function updateLive(obj){ $('#liveSuggestion').textContent = obj?.title || 'Noch keine Daten'; $('#liveScore').textContent = 'Score: '+ (obj?.score ?? '–'); }

    $('#btnScoreAll').onclick = ()=>{ const list = computeAll(); showResults(list.slice(0,4)); };

    // Live hero buttons
    $('#btnQuickGood').onclick = ()=>{ const txt=$('#liveSuggestion').textContent; const sc=$('#liveScore').textContent.replace('Score: ','')|0; feedback(true, txt, sc); };
    $('#btnQuickBad').onclick = ()=>{ const txt=$('#liveSuggestion').textContent; const sc=$('#liveScore').textContent.replace('Score: ','')|0; feedback(false, txt, sc); };

    // ---------- Feedback Learning (einfaches Signal) ----------
    window._fb = (titleEnc, score, good)=>{ feedback(good, decodeURIComponent(titleEnc), score); };
    function feedback(good, title, score){
      if(!title || title==='Noch keine Daten') return;
      state.feedback.push({title, score, good, ts: Date.now()}); save();
      // Kleiner Lernimpuls: bei wiederholtem "gut" erhöhen wir kategorielles Gewicht leicht
      const t = state.tasks.find(x=> x.title===title);
      if (t) {
        const key = CAT_WEIGHT_KEY[t.cat];
        state.profile[key] = clamp((state.profile[key]||0) + (good? 0.2 : -0.1), 0, 10);
        syncProfileToInputs(); save();
      }
      toast(good? 'Super! Wir berücksichtigen das stärker.' : 'Verstanden – Vorschläge passen wir an.');
    }

    // ---------- Helpers ----------
    function toast(msg){
      let n = document.createElement('div');
      n.className = 'fixed bottom-4 left-1/2 -translate-x-1/2 px-4 py-2 rounded-xl shadow-lg bg-slate-900 text-white';
      n.textContent = msg; document.body.appendChild(n);
      setTimeout(()=> n.remove(), 2000);
    }
    function escapeHtml(s){ return (s||'').replace(/[&<>"']/g, c=>({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;','\'':'&#39;'}[c])); }

    // ---------- Init ----------
    (function init(){
      syncProfileToInputs(); renderTasks(); $('#year').textContent = new Date().getFullYear(); computeLive();
    })();

    function computeLive(){ const list = computeAll(); if(list.length){ updateLive({title:list[0].title, score:list[0].score}); } }
  </script>
</body>
</html>
